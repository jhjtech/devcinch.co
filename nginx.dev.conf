worker_processes 1;

events {
    worker_connections 1024;
}

http {

    lua_package_path "$prefix/?.lua;;";

    server {

        listen 8080 reuseport;

        location / {
            default_type "text/html; charset=utf-8";
            content_by_lua_block {
                local fennel = require("fennel")
                fennel.path = fennel.path .. ";/?.fnl"
                table.insert(package.loaders or package.searchers, fennel.searcher)
                require("dev").refresh()
                require("server").index()
            }
        }

        location /clients {
            default_type text/html;
            content_by_lua_block {
                local fennel = require("fennel")
                fennel.path = fennel.path .. ";/?.fnl"
                table.insert(package.loaders or package.searchers, fennel.searcher)
                require("dev").refresh()
                require("server").clients()
            }
        }

        location /articles {
            default_type text/html;
            content_by_lua_block {
                local fennel = require("fennel")
                fennel.path = fennel.path .. ";/?.fnl"
                table.insert(package.loaders or package.searchers, fennel.searcher)
                require("dev").refresh()
                require("server").articles()
            }
        }

        location ~ /articles/([-_a-zA-Z0-9/]+) {
            default_type text/html;
            content_by_lua_block {
                local fennel = require("fennel")
                fennel.path = fennel.path .. ";/?.fnl"
                table.insert(package.loaders or package.searchers, fennel.searcher)
                require("dev").refresh()
                require("server").article()
            }
        }

        location ~ /pages/([-_a-zA-Z0-9/]+) {
            default_type text/html;
            content_by_lua_block {
                local fennel = require("fennel")
                fennel.path = fennel.path .. ";/?.fnl"
                table.insert(package.loaders or package.searchers, fennel.searcher)
                require("dev").refresh()
                require("server").page()
            }
        }

        location ~ \.css {
            root ./assets/css;
            types { } default_type "text/css; charset=utf-8";
        }

        location ~* /js/.+\.js$ {
            root ./assets;
            types { } default_type "text/javascript";
        }

        location ~ \.png {
            root ./images;
            types { } default_type "image/png";
        }

        location ~ \.jpg {
            root ./images;
            types { } default_type "image/jpg";
        }

        location ~ \.webp {
            root ./images;
            types { } default_type "image/webp";
        }

        location ~* /webfonts/.+\.svg$ {
            root ./assets;
            types { } default_type "image/svg+xml";
        }

        location ~* /webfonts/.+\.woff$ {
            root ./assets;
            types { } default_type "application/font-woff";
        }

        location ~* /webfonts/.+\.woff2$ {
            root ./assets;
            types { } default_type "applicaton/font-woff2";
        }

        location ~* /webfonts/.+\.ttf$ {
            root ./assets;
            types { } default_type "application/font-ttf";
        }
    }
}
